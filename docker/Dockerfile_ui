# SPDX-FileCopyrightText: 2023 Magenta ApS <info@magenta.dk>
#
# SPDX-License-Identifier: MPL-2.0

FROM python:3.11
ENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.2.27/supercronic-linux-amd64 \
    SUPERCRONIC=supercronic-linux-amd64 \
    SUPERCRONIC_SHA1SUM=7dadd4ac827e7bd60b386414dfefc898ae5b6c63\
    PYTHONUNBUFFERED=1
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN mkdir /app && \
    mkdir -p /var/cache/told && \
    mkdir /static && \
    mkdir -p /tf5/tilladelser && \
    #gid/uid from salt
    groupadd -g 75130 -r toldbehandling && \
    groupadd -g 75100 -r certificate_exporter && \
    useradd -u 75130 --no-log-init -r -g toldbehandling -G certificate_exporter toldbehandling && \
    chown -R toldbehandling:toldbehandling /var/cache/told /static /tf5 && \
    chmod a+w /var/cache/told

# Font cache for pdf generation
RUN mkdir -p /home/toldbehandling/.cache/fontconfig && \
    chown -R toldbehandling /home/toldbehandling/.cache/fontconfig

# hadolint ignore=DL3008
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        gettext libxmlsec1-dev xmlsec1 postgresql-client-common postgresql-client-16 && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# supercronic
RUN curl -fsSLO "$SUPERCRONIC_URL" && \
    echo "${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}" | sha1sum -c - && \
    chmod +x "$SUPERCRONIC" && \
    mv "$SUPERCRONIC" "/usr/local/bin/${SUPERCRONIC}" && \
    ln -s "/usr/local/bin/${SUPERCRONIC}" /usr/local/bin/supercronic

COPY ui/requirements.txt /app/requirements.txt
COPY ui/mypy.ini /app/mypy.ini

RUN pip install --no-cache-dir -r /app/requirements.txt
# Include & install told-common package
COPY --chown=toldbehandling:toldbehandling ./told-common /app/told-common
RUN pushd /app/told-common && pip wheel -w dist . && popd || exit
RUN pip install --no-cache-dir /app/told-common/dist/told_common-0.0.1-py3-none-any.whl && \
    rm /app/requirements.txt

ARG COMMIT_TAG
ENV COMMIT_TAG=${COMMIT_TAG:-HEAD}

COPY --chown=toldbehandling:toldbehandling ./ui /app
RUN chown -R toldbehandling:toldbehandling /app
COPY ./docker/entrypoint_ui.sh /entrypoint.sh
EXPOSE 8000
USER toldbehandling
ENTRYPOINT ["/entrypoint.sh"]
WORKDIR /app
RUN django-admin compilemessages --locale=kl --locale=da
VOLUME /var/cache/told
VOLUME /app/project/static/
CMD ["gunicorn","-b","0.0.0.0:8000","project.wsgi:application","-w","4","--timeout","120","--error-logfile","-","--capture-output"]
