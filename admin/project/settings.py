# SPDX-FileCopyrightText: 2023 Magenta ApS <info@magenta.dk>
#
# SPDX-License-Identifier: MPL-2.0

"""
Django settings for admin project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import json
import os
from datetime import timedelta
from pathlib import Path

from told_common.util import strtobool

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]

DEBUG = bool(strtobool(os.environ.get("DJANGO_DEBUG", "False")))
ENVIRONMENT = os.environ.get("ENVIRONMENT", "development")

ALLOWED_HOSTS = ["*"]

HOST_DOMAIN = os.environ.get("HOST_DOMAIN", "http://akitsuut.aka.gl")

if os.environ.get("HOST_DOMAIN", False):
    CSRF_TRUSTED_ORIGINS = [os.environ["HOST_DOMAIN"]]

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "told_common",
    "admin",
    "django_bootstrap_icons",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "libraries": {
                "common_tags": "told_common.templatetags.common_tags",
            },
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": os.environ["POSTGRES_DB"],
        "USER": os.environ["POSTGRES_USER"],
        "PASSWORD": os.environ["POSTGRES_PASSWORD"],
        "HOST": os.environ["POSTGRES_HOST"],
    },
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "da-DK"
LANGUAGES = [
    ("da", "Dansk"),
    ("kl", "Kalaallisut"),
]
LOCALE_PATHS = [os.path.join(BASE_DIR, "locale")]
LOCALE_MAP = {"da": "da-DK", "kl": "kl-GL"}

TIME_ZONE = "UTC"
USE_I18N = True
USE_L10N = True
USE_TZ = True
USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = "."
DECIMAL_SEPARATOR = ","


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/admin/static/"
STATIC_ROOT = "/static"
MEDIA_ROOT = "/upload"

DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024

APPEND_SLASH = True

REST_DOMAIN = os.environ["REST_DOMAIN"]

NINJA_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(seconds=20),
}

PRISME = {
    "wsdl_file": os.environ.get("PRISME_WSDL", ""),
    "auth": {
        "basic": {
            "username": os.environ.get("PRISME_USERNAME", ""),
            "domain": os.environ.get("PRISME_DOMAIN", ""),
            "password": os.environ.get("PRISME_PASSWORD", ""),
        }
    },
    "area": os.environ.get("PRISME_AREA", ""),
}
if "PRISME_SOCKS_PROXY" in os.environ:
    PRISME["proxy"] = {"socks": os.environ["PRISME_SOCKS_PROXY"]}

SESSION_COOKIE_PATH = "/admin"
SESSION_COOKIE_SAMESITE = "Strict"
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_NAME = "admin_sessionid"

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# TODO: Smid dette i en model og lav rest-interface til det.
CVR_TOLDKATEGORI_MAP = [
    {"kategori": "70", "navn": "RAL Royal Arctic Line A/S", "cvr": []},
    {"kategori": "71", "navn": "Forudbetalt indførselsafgift", "cvr": []},
    {
        "kategori": "73A",
        "navn": "Kreditkunder Nan,Qaq,Nar,Kali,Qas,Nuu,Man,Sis,Nars",
        "cvr": [12345678],
    },
    {"kategori": "73B", "navn": "Kreditkunder Kangaa,Aas,Qas,Ilu,Qeq", "cvr": []},
    {"kategori": "73C", "navn": "Kreditkunder Uum,Uper", "cvr": []},
    {"kategori": "73D", "navn": "Kreditkunder Tasiilaq,Kangerlussuaq", "cvr": []},
    {"kategori": "73E", "navn": "Kreditkunder Ittoqqortoormiit,Qaanaq", "cvr": []},
    {"kategori": "76", "navn": "Fra Tusass A/S", "cvr": []},
    {"kategori": "77", "navn": "Fra Skattestyrelsen", "cvr": []},
    {"kategori": "79", "navn": "Refusion", "cvr": []},
    {"kategori": "80", "navn": "Blue Water Shipping", "cvr": [12345678], "kan_vælges_i_form": True}
]

TILLÆGSAFGIFT_FAKTOR = 0.5
EKSPEDITIONSGEBYR = 250

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "gunicorn": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["gunicorn"],
        "level": "INFO",
    },
    "loggers": {
        "django": {
            "handlers": ["gunicorn"],
            "level": "INFO",
            "propagate": False,
        },
        "weasyprint": {
            "handlers": ["gunicorn"],
            "level": "ERROR",
            "propagate": False,
        },
        "fontTools": {
            "handlers": ["gunicorn"],
            "level": "ERROR",
            "propagate": False,
        },
    },
}
